compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap.drainReadBuffer.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap.access$1000.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader.access$200.*
compileOnly io.micronaut.core.annotation.AnnotationUtil.internMapOf.*
compileOnly io.micronaut.core.annotation.AnnotationClassValue.getName.*
compileOnly io.micronaut.core.util.StringUtils.internMapOf.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader.lambda$new$0.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader.access$400.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader.access$100.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader$1.hasNext.*
compileOnly io.micronaut.core.io.service.DefaultServiceDefinition.getName.*
compileOnly io.micronaut.core.annotation.AnnotationUtil.internListOf.*
compileOnly io.micronaut.inject.annotation.AnnotationMetadataSupport.registerAnnotationType.*
compileOnly io.micronaut.core.util.StringUtils.isEmpty.*
compileOnly io.micronaut.core.util.StringUtils.isNotEmpty.*
compileOnly io.micronaut.context.AbstractBeanDefinitionReference.getBeanDefinitionName.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.hasDeclaredAnnotation.*
compileOnly io.micronaut.inject.BeanType.requiresMethodProcessing.*
compileOnly io.micronaut.context.AbstractBeanConfiguration.isWithin.*
compileOnly io.micronaut.context.AbstractBeanConfiguration.isWithin.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.hasStereotype.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.hasAnnotation.*
compileOnly io.micronaut.core.annotation.AnnotationMetadata.hasStereotype.*
compileOnly io.micronaut.context.DefaultBeanContext.lambda$findBeanCandidates$32.*
compileOnly io.micronaut.core.annotation.AnnotationMetadata.hasDeclaredStereotype.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.hasDeclaredStereotype.*
compileOnly io.micronaut.context.AbstractBeanDefinition.getAnnotationMetadata.*
compileOnly io.micronaut.core.util.CollectionUtils.isNotEmpty.*
compileOnly io.micronaut.context.DefaultBeanContext$BeanKey.hashCode.*
compileOnly io.micronaut.inject.annotation.AbstractEnvironmentAnnotationMetadata.hasDeclaredStereotype.*
compileOnly io.micronaut.context.AbstractBeanDefinition.getBeanType.*
compileOnly io.micronaut.core.type.DefaultArgument.getType.*
compileOnly io.micronaut.core.util.ArrayUtils.isEmpty.*
compileOnly io.micronaut.core.util.ArgumentUtils.requireNonNull.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap.checkNotNull.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$Node.getPrevious.*
compileOnly io.micronaut.core.util.clhm.Weighers$SingletonEntryWeigher.weightOf.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$DiscardingQueue.poll.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$Node.setNext.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$Node.setPrevious.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.getAnnotationValuesByType.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$Node.getNext.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap.access$1100.*
compileOnly io.micronaut.core.annotation.AnnotationValue.contains.*
compileOnly io.micronaut.context.DefaultApplicationContext.getEnvironment.*
compileOnly io.micronaut.context.env.PropertySourcePropertyResolver.lambda$null$1.*
compileOnly io.micronaut.context.BeanRegistration.getBeanDefinition.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap.drainReadBuffer.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap.access$1000.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader.access$200.*
compileOnly io.micronaut.core.annotation.AnnotationUtil.internMapOf.*
compileOnly io.micronaut.core.util.StringUtils.internMapOf.*
compileOnly io.micronaut.core.annotation.AnnotationClassValue.getName.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader.lambda$new$0.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader.access$400.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader.access$100.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader$1.hasNext.*
compileOnly io.micronaut.core.io.service.DefaultServiceDefinition.getName.*
compileOnly io.micronaut.core.annotation.AnnotationUtil.internListOf.*
compileOnly io.micronaut.core.util.StringUtils.isEmpty.*
compileOnly io.micronaut.core.util.StringUtils.isNotEmpty.*
compileOnly io.micronaut.context.AbstractBeanDefinitionReference.getBeanDefinitionName.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.hasDeclaredAnnotation.*
compileOnly io.micronaut.context.AbstractBeanConfiguration.isWithin.*
compileOnly io.micronaut.inject.BeanType.requiresMethodProcessing.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.hasStereotype.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.hasAnnotation.*
compileOnly io.micronaut.context.AbstractBeanConfiguration.isWithin.*
compileOnly io.micronaut.core.annotation.AnnotationMetadata.hasStereotype.*
compileOnly io.micronaut.context.DefaultBeanContext.lambda$findBeanCandidates$32.*
compileOnly io.micronaut.core.annotation.AnnotationMetadata.hasDeclaredStereotype.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.hasDeclaredStereotype.*
compileOnly io.micronaut.context.AbstractBeanDefinition.getAnnotationMetadata.*
compileOnly io.micronaut.core.util.ArrayUtils.isEmpty.*
compileOnly io.micronaut.inject.annotation.AbstractEnvironmentAnnotationMetadata.hasDeclaredStereotype.*
compileOnly io.micronaut.context.DefaultBeanContext$BeanKey.hashCode.*
compileOnly io.micronaut.context.AbstractBeanDefinition.getBeanType.*
compileOnly io.micronaut.core.type.DefaultArgument.getType.*
compileOnly io.micronaut.core.util.ArgumentUtils.requireNonNull.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$Node.getPrevious.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$Node.setNext.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$Node.setPrevious.*
compileOnly io.micronaut.core.util.clhm.Weighers$SingletonEntryWeigher.weightOf.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$DiscardingQueue.poll.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$Node.getNext.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap.access$1100.*
compileOnly io.micronaut.core.convert.DefaultConversionService$ConvertiblePair.hashCode.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.getAnnotationValuesByType.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.resolveAnnotationValuesByType.*
compileOnly io.micronaut.core.util.ArrayUtils.isNotEmpty.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader$1.next.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader$1.next.*
compileOnly io.micronaut.core.io.service.SoftServiceLoader.newService.*
compileOnly io.micronaut.core.annotation.AnnotationValue.contains.*
compileOnly io.micronaut.core.annotation.AnnotationValue.isPresent.*
compileOnly io.micronaut.context.DefaultApplicationContext.getEnvironment.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap.checkNotNull.*
compileOnly io.micronaut.context.DefaultBeanContext$BeanKey.access$000.*
compileOnly io.micronaut.core.annotation.AnnotationMetadataDelegate.hasDeclaredStereotype.*
compileOnly io.micronaut.inject.annotation.AbstractEnvironmentAnnotationMetadata.hasStereotype.*
compileOnly io.micronaut.context.AbstractBeanContextConditional.isEnabled.*
compileOnly io.micronaut.context.env.PropertySourcePropertyResolver.lambda$null$1.*
compileOnly io.micronaut.core.util.CollectionUtils.isNotEmpty.*
compileOnly io.micronaut.context.RequiresCondition.matchesPresenceOfClasses.*
compileOnly io.micronaut.core.annotation.AnnotationValue.newConvertibleValues.*
compileOnly io.micronaut.core.util.CollectionUtils.isEmpty.*
compileOnly io.micronaut.core.convert.value.ConvertibleValues.of.*
compileOnly io.micronaut.core.type.Argument.of.*
compileOnly io.micronaut.context.AbstractBeanDefinition.access$000.*
compileOnly io.micronaut.context.env.PropertySourcePropertyResolver.resolveEntriesForKey.*
compileOnly io.micronaut.core.type.DefaultArgument.getName.*
compileOnly io.micronaut.core.type.DefaultArgument.getAnnotationMetadata.*
compileOnly io.micronaut.context.DefaultMethodInjectionPoint.configure.*
compileOnly io.micronaut.core.type.Argument.of.*
compileOnly io.micronaut.context.AbstractBeanResolutionContext.setCurrentQualifier.*
compileOnly io.micronaut.context.DefaultBeanContext$BeanKey.equals.*
compileOnly io.micronaut.context.AbstractBeanDefinition.getConstructor.*
compileOnly io.micronaut.core.type.Argument.toClassArray.*
compileOnly io.micronaut.context.AbstractBeanDefinition.addRequiredComponents.*
compileOnly io.micronaut.context.DefaultConditionContext.getComponent.*
compileOnly io.micronaut.core.annotation.AnnotationValue.getRawSingleValue.*
compileOnly io.micronaut.context.AbstractBeanDefinition$BeanAnnotationMetadata.getEnvironment.*
compileOnly io.micronaut.context.AbstractBeanDefinition.isSingleton.*
compileOnly io.micronaut.context.DefaultBeanContext$NoInjectionBeanDefinition.getBeanType.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$Node.getPrevious.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.getRawValue.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.getRawSingleValue.*
compileOnly io.micronaut.inject.annotation.AbstractEnvironmentAnnotationMetadata.getEnvironmentValueMapper.*
compileOnly io.micronaut.context.DefaultBeanContext.lambda$findBeanCandidates$32.*
compileOnly io.micronaut.context.DefaultBeanContext.lambda$findBeanCandidates$32.*
compileOnly io.micronaut.inject.qualifiers.NameQualifier.equals.*
compileOnly io.micronaut.context.EnvironmentAwareArgument.getAnnotationMetadata.*
compileOnly io.netty.buffer.PoolArena.newSubpagePoolHead.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap.notifyListener.*
compileOnly io.micronaut.core.type.DefaultArgument.getTypeVariables.*
compileOnly io.micronaut.inject.annotation.AbstractAnnotationMetadata.addValuesToResults.*
compileOnly io.micronaut.context.AbstractBeanDefinitionReference.isEnabled.*
compileOnly io.micronaut.core.util.clhm.ConcurrentLinkedHashMap$Node.getNext.*
compileOnly io.micronaut.core.annotation.AnnotationMetadataDelegate.hasStereotype.*
compileOnly io.micronaut.inject.BeanDefinition.getTypeArguments.*
compileOnly io.micronaut.inject.BeanDefinition.getTypeParameters.*
compileOnly io.netty.util.internal.ObjectUtil.checkNotNull.*
compileOnly io.micronaut.core.annotation.AnnotationMetadataDelegate.getAnnotationTypeByStereotype.*
compileOnly io.micronaut.core.annotation.AnnotationMetadata.getAnnotationTypeByStereotype.*
compileOnly io.micronaut.inject.annotation.DefaultAnnotationMetadata.getAnnotationTypeByStereotype.*
compileOnly io.micronaut.inject.annotation.AbstractEnvironmentAnnotationMetadata.getAnnotationTypeByStereotype.*
